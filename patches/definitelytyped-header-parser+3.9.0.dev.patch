diff --git a/node_modules/definitelytyped-header-parser/index.js b/node_modules/definitelytyped-header-parser/index.js
index 1e98290..df78295 100644
--- a/node_modules/definitelytyped-header-parser/index.js
+++ b/node_modules/definitelytyped-header-parser/index.js
@@ -4,9 +4,9 @@ const assert = require("assert");
 const pm = require("parsimmon");
 var TypeScriptVersion;
 (function (TypeScriptVersion) {
-    TypeScriptVersion.supported = ["2.8", "2.9",
-        "3.0", "3.1", "3.2", "3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9"];
-    TypeScriptVersion.unsupported = ["2.0", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7"];
+    TypeScriptVersion.supported = ["4.1", "4.2", "4.3", "4.4"];
+    TypeScriptVersion.unsupported = ["2.0", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7",
+        "2.8", "2.9", "3.0", "3.1", "3.2", "3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9", "4.0"];
     TypeScriptVersion.all = [...TypeScriptVersion.unsupported, ...TypeScriptVersion.supported];
     TypeScriptVersion.lowest = TypeScriptVersion.supported[0];
     /** Latest version that may be specified in a `// TypeScript Version:` header. */
@@ -105,14 +105,14 @@ function parseHeader(text, strict) {
 }
 function headerParser(strict) {
     return pm.seqMap(pm.regex(/\/\/ Type definitions for (non-npm package )?/), parseLabel(strict), pm.string("// Project: "), projectParser, pm.regexp(/\r?\n\/\/ Definitions by: /), contributorsParser(strict), definitionsParser, typeScriptVersionParser, pm.all, // Don't care about the rest of the file
-    // tslint:disable-next-line:variable-name
-    (str, label, _project, projects, _defsBy, contributors, _definitions, typeScriptVersion) => ({
-        libraryName: label.name,
-        libraryMajorVersion: label.major,
-        libraryMinorVersion: label.minor,
-        nonNpm: str.endsWith("non-npm package "),
-        projects, contributors, typeScriptVersion,
-    }));
+        // tslint:disable-next-line:variable-name
+        (str, label, _project, projects, _defsBy, contributors, _definitions, typeScriptVersion) => ({
+            libraryName: label.name,
+            libraryMajorVersion: label.major,
+            libraryMinorVersion: label.minor,
+            nonNpm: str.endsWith("non-npm package "),
+            projects, contributors, typeScriptVersion,
+        }));
 }
 /*
 Allow any of the following:
